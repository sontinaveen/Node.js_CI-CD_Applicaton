name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '16'
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/nodejs-simple-app

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install Dependencies
      run: |
        npm ci
        npm install jest supertest --save-dev
    
    - name: Run Tests
      run: npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      
    - name: Configure Kubernetes Credentials
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    
    - name: Deploy to Kubernetes
      run: |
        # Create Kubernetes deployment configuration
        cat > k8s-deployment.yaml << EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nodejs-simple-app
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: nodejs-simple-app
          template:
            metadata:
              labels:
                app: nodejs-simple-app
            spec:
              containers:
              - name: nodejs-simple-app
                image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
                ports:
                - containerPort: 3000
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: nodejs-simple-app-service
        spec:
          selector:
            app: nodejs-simple-app
          ports:
            - port: 80
              targetPort: 3000
          type: LoadBalancer
        EOF
        
        # Apply the deployment
        kubectl apply -f k8s-deployment.yaml
        
        # Verify deployment
        kubectl rollout status deployment/nodejs-simple-app

  notify:
    needs: [test, build-and-push, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
